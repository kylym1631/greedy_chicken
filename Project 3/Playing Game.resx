<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbDice.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAABM
        5QAATOUBdc7wlQAABDNJREFUeF7t2U1qFFEYhWHFRYjE/5GuQlCJMx36swkRB3GWoW5AwehIULeQjIRM
        1BVEUEdmARIVjCRpzymrm5ubL93VdpK+fe4ZPCKpqvtBvamqdPWxXq9nwv79c/zEMGfhEazAN/gNPZuK
        H7AGy8AmFyBq1hgVmGHfwBZEw2z6toGN2GpPw2GBb8IGRItaeXhl34VdHfcLfB/4mxEtZOXagQcwaBkF
        vg3cMVrAysd2bBgG5n2cl3p0oM0ONmyeyXng1xAdYLPnLewKfA7Gee7yVvARluCJHSqeY57rcR6dbHku
        DbyQbByGBz6FM9C/8u1o8Jzz3He9EBfSwPzgHO2U+gW3IB9sR4sNfkLUKLWcBl7PNuZ4e+Bn43yYTQdb
        jLplr6eBR71+fAb5EJsuNola9W2mgaMd+viq8jTkA2y65mDoa+SugVchX9zKwDZRs0bXwPwzPV/YysA2
        UbNG18CPIV/YyrAIUbOGA88+ficcNWs48OxzYHEOLM6BxTmwOAcW58DiHFicA4tzYHEOLM6BxTmwOAcW
        58DiHFicA4tzYHEOLM6BxTmwOAcW58DiHFicA4tzYHEOLM6BxTmwOAcW58DiHFhcPYFPnpo7UNGMAjkw
        XIXn8Bk2W/w/f3YNomPCGQWqOvAleAe9EbgP9911fDSjQNUGvgIbEAWNcF8eM1gjmlGgKgPzavwOUchh
        eMzgSo5mFKi6wMfhPUQBu+CxXCOcUaDqAl+HKNw4uEY4o0DVBV5qI02Ca4QzClRd4C9tpElwjXBGgaoL
        zM+4UbRxcI1wRoGqCzzOR6P9OHCJGAU+tZEm8RXCGQWqLvCrNtIkuEY4o0DVBb7RRprEPIQzClRdYL/o
        SCgGpkleVV6GZp1oRoGqDEz+sgGUAxOv5C63a+7jrwtLlwdq8XnKP5r4+pEff/7AT1hrf8ZtzTM3F80o
        UPWB/1s0o0D1BK6UA4tzYHEOLM6BxTmwOAcW58DiHFicA4tzYHEOLM6BxTmwOAcW58DiHFicA4tzYHEO
        LM6BxTmwOAcW58DiHFicA4tzYHEOLM6BxTmwOAcW58DiHFicA4tbhKhZo2vgJcgXtjKwTdSs0TXwKuQL
        WxnYJmrW6Bp4C05DvrhN1xywTdSskQb+nW/MPIV8gE3XM4ha9W2mgdezjTn+psxDPsSmgy2GXr2wngZe
        yTZGfsAtyIfZ0boJGxA1Si2ngReyjfvZhpdwBvLBdrh4zl8AG0Rtcgtp4PPQ9UDivh/gOfCzGH9B7ODx
        3PIc81yP2+d8Gpjethtt9rHlv7ZJ4LPA52x0gM0ONmTLPYHpDuxAdKCVj+3YsOkZBab7MM793srAuA9h
        0HK/wNT1T3ErA2/L92BXx2GBifdxPqx9NZeLbdioeebmRgXu48H83pEvQ/jG6w9Ew+zw8dyzAVuwyUWI
        mjUGgU1V79hfU5d2ff7CWq8AAAAASUVORK5CYII=
</value>
  </data>
</root>